# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
    contents: write
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Publish Linux
      run: dotnet publish --self-contained
    - name: Publish Windows
      run: dotnet publish -r win-x64 --self-contained
    - name: Publish Mac
      run: dotnet publish -r osx-arm64 --self-contained
    #- name: Zip Linux win-x64
      #run: zip release_linux.zip bin/Release/net8.0/linux-x64/publish
    - name: Archive production artifacts linux
      uses: actions/upload-artifact@v4
      with:
          name: ConvertEINK-linux
          path: |
            bin/Release/net8.0/linux-x64/publish
    - name: Archive production artifacts windows
      uses: actions/upload-artifact@v4
      with:
          name: ConvertEINK-win64
          path: |
            bin/Release/net8.0/win-x64/publish
    - name: Archive production artifacts mac_arm
      uses: actions/upload-artifact@v4
      with:
          name: ConvertEINK-osx-arm64
          path: |
            bin/Release/net8.0/osx-arm64/publish
    - name: Generate release tag
      id: tag
      run: |
          echo "::set-output name=release_tag::UserBuild_$(date +"%Y.%m.%d_%H-%M")"
    - name: ↙️ download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        #pattern: ConvertEINK-*
       # merge-multiple: true
    - name: Zip Linux
      working-directory: bin/Release/net8.0/linux-x64/publish
      run: zip -qq -r release_linux.zip .
    - name: Zip win-x64
      working-directory: bin/Release/net8.0/win-x64/publish
      run: zip -qq -r release_windows_x64.zip .
    - name: Zip osx-arm64
      working-directory: bin/Release/net8.0/osx-arm64/publish
      run: zip -qq -r release_osx-arm64.zip .
   # - uses: montudor/action-zip@v1
     
    #  with:
     #      args: zip -qq -j -r release_linux.zip .
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: "${{ github.workspace }}/**/release_*"
      env:
          GITHUB_TOKEN: ${{ github.token }}
